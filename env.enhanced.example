# üöÄ Enhanced Agent V2 - Environment Configuration
# ==============================================
# Copy this file to .env and configure your values

# === EXISTING SUPABASE CONFIGURATION (KEEP THESE) ===
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key_here
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key_here

# === ENHANCED AGENT V2 CONFIGURATION ===
# Enable the enhanced agent system
ENHANCED_AGENT_ENABLED=true

# Enhanced Agent Server Configuration
ENHANCED_AGENT_HOST=0.0.0.0
ENHANCED_AGENT_PORT=8000

# Frontend WebSocket URL (adjust for production)
NEXT_PUBLIC_ENHANCED_AGENT_WS_URL=ws://localhost:8000

# Optional: Default to enhanced mode for all users
NEXT_PUBLIC_ENHANCED_AGENT_DEFAULT=true

# === REDIS CONFIGURATION (REQUIRED FOR ENHANCED FEATURES) ===
# Redis URL for caching and performance optimization
REDIS_URL=redis://localhost:6379

# Redis connection pool settings
REDIS_MAX_CONNECTIONS=20
REDIS_TTL=300

# === AI/LLM CONFIGURATION ===
# Primary AI providers
OPENAI_API_KEY=your_openai_api_key_here
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Optional: Additional AI providers
GOOGLE_AI_API_KEY=your_google_ai_key_here
COHERE_API_KEY=your_cohere_api_key_here

# === PERFORMANCE OPTIMIZATION SETTINGS ===
# Maximum concurrent workers for tool execution
MAX_WORKERS=10

# Browser pool configuration
BROWSER_POOL_SIZE=5
BROWSER_HEADLESS=true
BROWSER_TIMEOUT=30000

# Caching configuration
CACHE_TTL=300
ENABLE_SMART_CACHING=true

# === SECURITY ===
# Secret key for session management
SECRET_KEY=your_super_secret_key_here_make_it_long_and_random

# CORS settings (adjust for production)
CORS_ORIGINS=http://localhost:3000,https://your-domain.com

# === MONITORING & ANALYTICS ===
# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Enable Prometheus metrics
PROMETHEUS_ENABLED=true
METRICS_PORT=9090

# Optional: Sentry for error tracking
SENTRY_DSN=your_sentry_dsn_here

# === DATABASE INTEGRATION ===
# Primary database URL (usually same as Supabase)
DATABASE_URL=postgresql://postgres:password@localhost:5432/your_db

# Supabase database direct URL for backend operations
SUPABASE_DATABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}/rest/v1/

# === ENHANCED FEATURE FLAGS ===
# Enable parallel tool execution (recommended)
ENABLE_PARALLEL_TOOLS=true

# Enable real-time streaming responses
ENABLE_REAL_TIME_STREAMING=true

# Enable performance monitoring
ENABLE_PERFORMANCE_MONITORING=true

# Enable smart context management
ENABLE_SMART_CONTEXT=true

# Enable browser pool optimization
ENABLE_BROWSER_POOL=true

# === DEVELOPMENT SETTINGS ===
# Enable debug mode for development
DEBUG_MODE=false

# Enable detailed performance logging
PERFORMANCE_LOGGING=true

# Hot reload for enhanced agent
ENHANCED_AGENT_RELOAD=true

# === PRODUCTION OPTIMIZATION ===
# Enable compression for API responses
ENABLE_COMPRESSION=true

# Rate limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=100

# Connection timeout settings
CONNECTION_TIMEOUT=30
REQUEST_TIMEOUT=120

# === PLAYWRIGHT BROWSER AUTOMATION ===
# Browser automation settings
PLAYWRIGHT_BROWSERS_PATH=/opt/playwright
PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=false

# === OPTIONAL: EXTERNAL SERVICES ===
# File storage (if using external storage)
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_S3_BUCKET=your_s3_bucket

# Email service (for notifications)
SMTP_HOST=smtp.your-provider.com
SMTP_PORT=587
SMTP_USER=your_smtp_user
SMTP_PASS=your_smtp_password

# === ENHANCED AGENT SPECIFIC ===
# Agent configuration
DEFAULT_AGENT_NAME="Enhanced Yari V2"
DEFAULT_SYSTEM_PROMPT="You are an enhanced AI assistant with 30x faster performance and real-time capabilities."

# Tool configuration
ENABLE_BROWSER_TOOLS=true
ENABLE_FILE_TOOLS=true
ENABLE_SEARCH_TOOLS=true
ENABLE_MCP_TOOLS=true

# Performance thresholds for alerting
PERFORMANCE_ALERT_THRESHOLD_MS=5000
TOOL_TIMEOUT_SECONDS=60

# === EXAMPLE PRODUCTION VALUES ===
# Uncomment and modify for production deployment

# Production Redis (e.g., Redis Cloud, AWS ElastiCache)
# REDIS_URL=rediss://username:password@your-redis-host:6380

# Production database
# DATABASE_URL=postgresql://user:pass@your-db-host:5432/production_db

# Production frontend URL
# NEXT_PUBLIC_ENHANCED_AGENT_WS_URL=wss://your-api-domain.com

# Production CORS
# CORS_ORIGINS=https://your-domain.com,https://app.your-domain.com

# Production monitoring
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Production file storage
# AWS_S3_BUCKET=your-production-bucket
# AWS_REGION=us-east-1

# ============================================
# üìù CONFIGURATION NOTES:
# ============================================

# 1. SUPABASE SETUP:
#    - Keep your existing Supabase configuration
#    - The enhanced system works alongside your current setup
#    - No database changes required (optional performance tables available)

# 2. REDIS REQUIREMENT:
#    - Redis is required for the enhanced caching system
#    - Install locally: brew install redis (Mac) or apt-get install redis (Ubuntu)
#    - Or use a cloud Redis service for production

# 3. BROWSER AUTOMATION:
#    - Playwright will be installed automatically
#    - Browser binaries download automatically on first run
#    - Headless mode recommended for production

# 4. PERFORMANCE TUNING:
#    - Adjust MAX_WORKERS based on your server capacity
#    - Increase BROWSER_POOL_SIZE for high-traffic scenarios
#    - Tune CACHE_TTL based on your use case

# 5. SECURITY:
#    - Generate a strong SECRET_KEY for production
#    - Configure CORS_ORIGINS appropriately
#    - Use environment-specific URLs

# 6. MONITORING:
#    - Enable Prometheus metrics for production monitoring
#    - Use Sentry for error tracking in production
#    - Set appropriate LOG_LEVEL (INFO for production, DEBUG for development)

# 7. SCALING:
#    - Use Redis Cluster for high-availability caching
#    - Consider load balancing for multiple enhanced agent instances
#    - Monitor performance metrics and adjust settings accordingly 